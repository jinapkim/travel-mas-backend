{
	"info": {
		"_postman_id": "6b5ed31d-70cb-4590-957f-8da7327d1c8b",
		"name": "Experiences",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17862312"
	},
	"item": [
		{
			"name": "201, Create Experience 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {\"type\": \"number\"},",
							"        \"user_id\": {\"type\": \"number\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"description\": {\"type\": \"string\"},",
							"        \"geo_location\": {\"type\": \"string\"},",
							"        \"image\": {\"type\": \"string\"},",
							"        \"rating\": {\"type\": \"number\"},",
							"        \"keywords\": {\"type\": \"array\"}",
							"    },",
							"    \"required\": [\"id\", \"user_id\", \"title\", \"description\", \"geo_location\", \"image\", \"rating\", \"keywords\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Test Correct Field Values\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1)",
							"    pm.expect(jsonData.user_id).to.eql(1)",
							"    pm.expect(jsonData.title).to.eql(\"Four Roses Distillery Tour\")",
							"    pm.expect(jsonData.description).to.eql(\"Tour of the Four Roses distillery\")",
							"    pm.expect(jsonData.rating).to.eql(3)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Four Roses Distillery Tour\",\n    \"description\": \"Tour of the Four Roses distillery\",\n    \"location\": \"Lawrenceburg, KY\",\n    \"image\": \"linkToImage.jpg\",\n    \"rating\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "201, Create Experience 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {\"type\": \"number\"},",
							"        \"user_id\": {\"type\": \"number\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"description\": {\"type\": \"string\"},",
							"        \"geo_location\": {\"type\": \"string\"},",
							"        \"image\": {\"type\": \"string\"},",
							"        \"rating\": {\"type\": \"number\"},",
							"        \"keywords\": {\"type\": \"array\"}",
							"    },",
							"    \"required\": [\"id\", \"user_id\", \"title\", \"description\", \"geo_location\", \"image\", \"rating\", \"keywords\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Test Correct Field Values\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(2)",
							"    pm.expect(jsonData.user_id).to.eql(1)",
							"    pm.expect(jsonData.title).to.eql(\"Louisville Slugger Museum\")",
							"    pm.expect(jsonData.description).to.eql(\"Tour of the Louisville Slugger Museum\")",
							"    pm.expect(jsonData.rating).to.eql(4)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Louisville Slugger Museum\",\n    \"description\": \"Tour of the Louisville Slugger Museum\",\n    \"location\": \"Louisville, KY\",\n    \"image\": \"linkToImage.jpg\",\n    \"rating\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "201, Create Experience 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {\"type\": \"number\"},",
							"        \"user_id\": {\"type\": \"number\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"description\": {\"type\": \"string\"},",
							"        \"geo_location\": {\"type\": \"string\"},",
							"        \"image\": {\"type\": \"string\"},",
							"        \"rating\": {\"type\": \"number\"},",
							"        \"keywords\": {\"type\": \"array\"}",
							"    },",
							"    \"required\": [\"id\", \"user_id\", \"title\", \"description\", \"geo_location\", \"image\", \"rating\", \"keywords\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Test Correct Field Values\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3)",
							"    pm.expect(jsonData.user_id).to.eql(2)",
							"    pm.expect(jsonData.title).to.eql(\"Dos Santos\")",
							"    pm.expect(jsonData.description).to.eql(\"restaurant\")",
							"    pm.expect(jsonData.rating).to.eql(5)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Dos Santos\",\n    \"description\": \"restaurant\",\n    \"location\": \"Colorado Springs, CO\",\n    \"image\": \"linkToImage.jpg\",\n    \"rating\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "401, Create Experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Dos Santos\", \n    \"description\": \"restaurant\", \n    \"location\": \"Colorado Springs, CO\", \n    \"image\": \"https://link\", \n    \"rating\":4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "201, Create Experience 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Karl Strauss\", \n    \"description\": \"Brewery, restaurant\", \n    \"location\": \"San Diego\", \n    \"image\": \"https://link\", \n    \"rating\":5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "201, Create Experience 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Field Museum\", \n    \"description\": \"Natural history museum\", \n    \"location\": \"Chicago, IL\", \n    \"image\": \"https://link\", \n    \"rating\":5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "400, Missing Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Dos Santos\",\n    \"location\": \"Colorado Springs, CO\",\n    \"image\": \"linkToImage.jpg\",\n    \"rating\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, All Experiences",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"5 Experiences Created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.count).to.eql(5);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Experience By Keyword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains Two Entries: Tour\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.count).to.eql(2)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences?keyword=Tour",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					],
					"query": [
						{
							"key": "keyword",
							"value": "Tour"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Experience By Keyword Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains One Entry: Karl Strauss\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.experiences[0].id).to.eql(4);",
							"    pm.expect(jsonData.count).to.eql(1)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences?keyword=San%20Diego",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					],
					"query": [
						{
							"key": "keyword",
							"value": "San%20Diego"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "403, Invalid User Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rating\": 5,\n    \"location\": \"Atlanta, GA\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences/1",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Update Experience 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {\"type\": \"number\"},",
							"        \"user_id\": {\"type\": \"number\"},",
							"        \"title\": {\"type\": \"string\"},",
							"        \"description\": {\"type\": \"string\"},",
							"        \"geo_location\": {\"type\": \"string\"},",
							"        \"image\": {\"type\": \"string\"},",
							"        \"rating\": {\"type\": \"number\"},",
							"        \"keywords\": {\"type\": \"array\"}",
							"    },",
							"    \"required\": [\"id\", \"user_id\", \"title\", \"description\", \"geo_location\", \"image\", \"rating\", \"keywords\"",
							"    ]",
							"};",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Test Correct Field Values\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3)",
							"    pm.expect(jsonData.rating).to.eql(5)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Desta Ethiopian Kitchen\",\n    \"location\": \"Atlanta, GA\",\n    \"description\": \"Ethiopian restaurant\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/experiences/3",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Updated Now In Keyword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains One Entry: new name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.experiences[0].id).to.eql(3);",
							"    pm.expect(jsonData.count).to.eql(1)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences?keyword=Atlanta",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					],
					"query": [
						{
							"key": "keyword",
							"value": "Atlanta"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "403, Delete 1 Invalid User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/1",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Delete 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/1",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "404, id 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/1",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Delete 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/2",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Delete 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/3",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Delete 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/4",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, Delete 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token_1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences/5",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "200, All Experiences",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"All Experiences deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.count).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/experiences",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"experiences"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}